<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://www.daisy.org/ns/xprocspec/xprocspec.rng" type="application/xml" schematypens="http://relaxng.org/ns/structure/1.0"?>
<x:description xmlns:x="http://www.daisy.org/ns/xprocspec" xmlns:test="http://www.daisy.org/ns/xprocspec/inline-script" xmlns:p="http://www.w3.org/ns/xproc" xmlns:c="http://www.w3.org/ns/xproc-step"
    xmlns:px="http://www.daisy.org/ns/pipeline/xproc" xmlns:d="http://www.daisy.org/ns/pipeline/data" xmlns:xs="http://www.w3.org/2001/XMLSchema">

    <x:script>
        <p:declare-step type="test:test" version="1.0">
            <p:option name="href" required="true"/>
            <p:option name="target" required="true"/>
            <p:option name="doctype" required="true"/>
            <p:output port="result"/>
            <p:import href="../../../src/main/resources/xml/xproc/set-doctype.xpl"/>
            <p:add-attribute match="/*" attribute-name="href">
                <p:with-option name="attribute-value" select="$href"/>
                <p:input port="source">
                    <p:inline exclude-inline-prefixes="#all">
                        <c:request method="GET" override-content-type="text/plain"/>
                    </p:inline>
                </p:input>
            </p:add-attribute>
            <p:http-request/>
            <p:store method="text" name="store">
                <p:with-option name="href" select="$target"/>
            </p:store>
            <px:set-doctype>
                <p:with-option name="href" select="/*/text()">
                    <p:pipe port="result" step="store"/>
                </p:with-option>
                <p:with-option name="doctype" select="$doctype"/>
            </px:set-doctype>
        </p:declare-step>
    </x:script>

    <x:scenario label="Scenario for testing px:set-doctype - without a pre-existing doctype">
        <x:call step="test:test">
            <x:option name="target" select="resolve-uri('set-doctype.without-doctype.xml',$temp-dir)"/>
            <x:option name="doctype" select="'&lt;!DOCTYPE html&gt;'"/>
            <x:option name="href" select="resolve-uri('samples/set-doctype.without-doctype.xml',base-uri(.))"/>
        </x:call>

        <x:context label="the result port">
            <x:document type="port" port="result"/>
        </x:context>
        <x:expect label="There must be exactly one document on the result port" type="count" min="1" max="1"/>
        <x:expect label="The value of the result must be the URI to the document" type="xpath" test="/*/text()" equals="resolve-uri('set-doctype.without-doctype.xml',$temp-dir)"/>

        <x:context label="the stored document">
            <x:document type="file" base-uri="temp-dir" href="set-doctype.without-doctype.xml" method="text"/>
        </x:context>
        <x:expect label="the document should be stored" type="count" min="1" max="1"/>
        <x:expect label="the document should start with a xml declaration" type="xpath" test="starts-with(/*/text(),'&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;')"/>
        <x:expect label="the document should contain the correct DOCTYPE declaration" type="xpath" test="matches(/*/text(),'.*&lt;!DOCTYPE html&gt;.*&lt;html.*','s')"/>
        <x:expect label="the document should otherwise be exactly as the input document" type="compare">
            <x:document type="inline" xml:space="preserve"><body xmlns="http://www.w3.org/ns/xproc-step">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;!DOCTYPE html&gt;
&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
    &lt;head&gt;
        &lt;title&gt;XHTML5&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;h1&gt;XHTML5&lt;/h1&gt;
        &lt;!--&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"&gt;--&gt;
        &lt;![CDATA[&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"&gt;]]&gt;
    &lt;/body&gt;
&lt;/html&gt;</body></x:document>
        </x:expect>
    </x:scenario>

    <x:scenario label="Scenario for testing px:set-doctype - with a pre-existing doctype">
        <x:call step="test:test">
            <x:option name="target" select="resolve-uri('set-doctype.with-doctype.xml',$temp-dir)"/>
            <x:option name="doctype" select="'&lt;!DOCTYPE html&gt;'"/>
            <x:option name="href" select="resolve-uri('samples/set-doctype.with-doctype.xml',base-uri(.))"/>
        </x:call>

        <x:context label="the stored document">
            <x:document type="file" base-uri="temp-dir" href="set-doctype.with-doctype.xml" method="text"/>
        </x:context>
        <x:expect label="the document should start with a xml declaration" type="xpath" test="starts-with(/*/text(),'&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;')"/>
        <x:expect label="the document should contain the correct DOCTYPE declaration" type="xpath" test="matches(/*/text(),'.*&lt;!DOCTYPE html&gt;.*&lt;html.*','s')"/>
    </x:scenario>

    <x:scenario label="Scenario for testing px:set-doctype - without a xml declaration">
        <x:call step="test:test">
            <x:option name="target" select="resolve-uri('set-doctype.without-xml-declaration.xml',$temp-dir)"/>
            <x:option name="doctype" select="'&lt;!DOCTYPE html&gt;'"/>
            <x:option name="href" select="resolve-uri('samples/set-doctype.without-xml-declaration.xml',base-uri(.))"/>
        </x:call>

        <x:context label="the stored document">
            <x:document type="file" base-uri="temp-dir" href="set-doctype.without-xml-declaration.xml" method="text"/>
        </x:context>
        <x:expect label="the document should not start with a xml declaration" type="xpath" test="not(starts-with(/*/text(),'&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;'))"/>
        <x:expect label="the document should contain the correct DOCTYPE declaration" type="xpath" test="matches(/*/text(),'.*&lt;!DOCTYPE html&gt;.*&lt;html.*','s')"/>
    </x:scenario>

    <x:scenario label="Scenario for testing px:set-doctype - deleting an existing doctype declaration">
        <x:call step="test:test">
            <x:option name="target" select="resolve-uri('set-doctype.delete-existing.xml',$temp-dir)"/>
            <x:option name="doctype" select="''"/>
            <x:option name="href" select="resolve-uri('samples/set-doctype.without-xml-declaration.xml',base-uri(.))"/>
        </x:call>

        <x:context label="the stored document">
            <x:document type="file" base-uri="temp-dir" href="set-doctype.delete-existing.xml" method="text"/>
        </x:context>
        <x:expect label="the document should not start with a xml declaration" type="xpath" test="not(starts-with(/*/text(),'&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;'))"/>
        <x:expect label="the document should not contain a DOCTYPE declaration" type="xpath" test="not(matches(/*/text(),'.*&lt;!DOCTYPE[^&gt;]*&gt;.*&lt;html.*','s'))"/>
    </x:scenario>

    <x:scenario label="Scenario for testing px:set-doctype - with a MathML doctype extension">
        <x:call step="test:test">
            <x:option name="target" select="resolve-uri('set-doctype.add-extension.xml',$temp-dir)"/>
            <x:option name="doctype"
		      select="'&lt;!DOCTYPE dtbook PUBLIC &quot;-//NISO//DTD dtbook 2005-2//EN&quot;
	      &quot;http://www.daisy.org/z3986/2005/dtbook-2005-2.dtd&quot;[
	      &lt;!ENTITY % MATHML.prefixed &quot;INCLUDE&quot; &gt;
	      &lt;!ENTITY % MATHML.prefix &quot;m&quot;&gt;
	      &lt;!ENTITY % MATHML.Common.attrib
	      &quot;xlink:href    CDATA       #IMPLIED
	      xlink:type     CDATA       #IMPLIED
	      class          CDATA       #IMPLIED
	      style          CDATA       #IMPLIED
	      id             ID          #IMPLIED
	      xref           IDREF       #IMPLIED
	      other          CDATA       #IMPLIED
	      xmlns:dtbook   CDATA       #FIXED ''http://www.daisy.org/z3986/2005/dtbook/''
	      dtbook:smilref CDATA       #IMPLIED&quot;&gt;
	      &lt;!ENTITY % mathML2 PUBLIC &quot;-//W3C//DTD MathML 2.0//EN&quot;
	      &quot;http://www.w3.org/Math/DTD/mathml2/mathml2.dtd&quot;&gt;
	      %mathML2;
	      &lt;!ENTITY % externalFlow &quot;| m:math&quot;&gt;
	      &lt;!ENTITY % externalNamespaces &quot;xmlns:m CDATA #FIXED
	      ''http://www.w3.org/1998/Math/MathML''&quot;&gt;]&gt;'"/>
            <x:option name="href" select="resolve-uri('samples/set-doctype.add-extension.xml',base-uri(.))"/>
        </x:call>
        <x:context label="the stored document">
            <x:document type="file" base-uri="temp-dir" href="set-doctype.add-extension.xml" method="text"/>
        </x:context>
        <x:expect label="the document DOCTYPE should contain a MathML extension" type="xpath" test="matches(/*/text(),'.*&lt;!DOCTYPE.*MATHML\.Common.*&gt;.*&lt;html.*','s')"/>
    </x:scenario>

</x:description>
